// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String  
  folders     Folder[]
  files       File[]
}

model Session {
  id          String    @id
  sid         String    @unique
  data        String
  expiresAt   DateTime
}

model Folder {
  id          Int       @id @default(autoincrement())
  name        String
  userId      Int
  parentId    Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent      Folder?   @relation("FolderToFolder", fields: [parentId], references: [id], onDelete: Cascade)
  children    Folder[]  @relation("FolderToFolder")
  files       File[]
  shareLink   ShareLink?

  @@unique([name, userId, parentId])
}

model File {
  id          Int       @id @default(autoincrement())
  name        String    // Original user filename
  filename    String    // Generated disk storage name (NEW!)
  size        Int
  mimeType    String
  url         String
  userId      Int
  publicId    String
  folderId    Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder      Folder?   @relation(fields: [folderId], references: [id], onDelete: Cascade)
}

model ShareLink {
  id          String    @id @default(uuid()) 
  folderId    Int      @unique
  expiresAt   DateTime  
  createdAt   DateTime  @default(now())

  folder      Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
}